
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Session {
  id        String   @id
  sid       String   @unique
  data      String @db.LongText
  expiresAt   DateTime
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  gender String?
  comments Comment[]
  posts Post[]
  Postlikes  PostLike[]
  Commentlikes CommentLike[]


  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
}

model Post {
  id            String    @id @default(cuid())
  title String @unique
  slug String @unique
  body String
  published Boolean @default(false)
  userId String
  user User @relation(fields:[userId], references: [id])
  likes PostLike[]
  comments Comment[]
  Commentlikes CommentLike[]


  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt

}


model PostLike {
  id String @id @default(uuid())
  userId String
  postId String
  post Post @relation(fields:[postId], references: [id])
  user User @relation(fields:[userId], references: [id])
  like Boolean?
}

model Comment {
  id            String    @id @default(cuid())
  body String
  userId String
  postId String
  post Post @relation(fields:[postId], references: [id])
  user User @relation(fields:[userId], references: [id])

  Commentlikes CommentLike[]

  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt

}

model CommentLike {
  id String @id @default(uuid())
  userId String
  postId String
  commentId String
  post Post @relation(fields:[postId], references: [id])
  user User @relation(fields:[userId], references: [id])
  comment Comment @relation(fields:[commentId], references: [id])
  like Boolean?
}