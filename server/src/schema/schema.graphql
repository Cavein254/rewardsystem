type Query {
  hello: String
  getCurrentUser: User
  getAllPosts: [Post]
  getPostDetails(slug: String!): PostDetails
  getAllUsers: [User]
  getAllComments: [Comment]
  getPostComments(postId: String!): [Comment]
  healthCheck: String
}

type Mutation {
  #posts
  createPost(input: CreatePostInput!): SuccessResults
  incrementPageView(postId: String): SuccessResults
  #comments
  createComment(input: CreateCommentInput!): SuccessResults
  deleteComment(input: ItemId!): SuccessResults
}

input ItemId {
  id: String!
}

input CreateCommentInput {
  body: String!
  userId: String!
  postId: String!
}

input CreatePostInput {
  title: String!
  body: String!
  slug: String!
  author: String!
}

type SuccessResults {
  success: Boolean!
  message: String
}

type User {
  id: ID!
  name: String
  email: String
  image: String
  gender: String
}

type Post {
  id: ID!
  title: String
  slug: String
  body: String
  views: Int
  published: Boolean
  createdAt: String
  updatedAt: String
  comments: [Comment]
  _count: CommentCount
}
type CommentCount {
  comments: Int
}
type PostDetails {
  id: ID!
  title: String
  slug: String
  body: String
  views: Int
  published: Boolean
  createdAt: String
  updatedAt: String
  comments: [Comment]
  user: User
}

type Comment {
  id: ID!
  body: String
  createdAt: String
  updatedAt: String
  user: User
  postId: String
}
